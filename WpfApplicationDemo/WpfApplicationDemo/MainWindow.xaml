<Window x:Class="WpfApplicationDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ComboboxDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <!--自定义颜色--><!--
            <LinearGradientBrush x:Key="LinearGradientBlueBackground" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF377FED" Offset="0" />
                <GradientStop Color="#FF074CC0" Offset="1" />
            </LinearGradientBrush>-->

            <SolidColorBrush x:Key="ControlBackGroundColor" Color="#f5f5f5"></SolidColorBrush>
            <SolidColorBrush x:Key="ControlBorderColor" Color="#ffffff"></SolidColorBrush>
            <SolidColorBrush x:Key="ControlForegroundColor" Color="#303030"></SolidColorBrush>
            <SolidColorBrush x:Key="ControlHoverBackGroundColor" Color="#0f82fa"></SolidColorBrush>
            <!--END-->
            
            <Style x:Key="ControlInMenuStyle" TargetType="{x:Type Control}" >
                <Setter Property="Background" Value="{StaticResource ControlBackGroundColor}"></Setter>
                <Setter Property="Foreground" Value="#303030"></Setter>
                <Setter Property="BorderBrush" Value="{StaticResource ControlBorderColor}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                                <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource ControlHoverBackGroundColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ItemControlInMenuStyle" TargetType="{x:Type ItemsControl}" >
                <Setter Property="Background" Value="{StaticResource ControlBackGroundColor}"></Setter>
                <Setter Property="Foreground" Value="#303030"></Setter>
                <Setter Property="BorderBrush" Value="{StaticResource ControlBorderColor}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                                <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource ControlHoverBackGroundColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!--菜单项MenuItem样式FIconMenuItem-->
            <Style x:Key="FIconMenuItem" TargetType="{x:Type MenuItem}">
                <Setter Property="BorderBrush" Value="{StaticResource ControlBorderColor}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="{StaticResource ControlBackGroundColor}"/>
                <Setter Property="Foreground" Value="{StaticResource ControlForegroundColor}"/>
                <Setter Property="Margin" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <!--Item-->
                            <Border  x:Name="border" Background="Transparent" Height="{TemplateBinding Height}" Opacity="1">
                                <Grid  VerticalAlignment="Center" Margin="{TemplateBinding Margin}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="icon_col" MaxWidth="35" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    </Grid.ColumnDefinitions>
                                    <!--icon-->
                                    <TextBlock x:Name="PART_Icon" Text="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" Margin="5,1,1,1"
                                       />
                                    <!--Header-->
                                    <ContentPresenter Grid.Column="1" x:Name="txtHeader" Margin="3,1,5,1" MinWidth="90"
                                          RecognizesAccessKey="True" VerticalAlignment="Center" ContentSource="Header"/>
                                    <!--淡出子集菜单容器-->
                                    <Popup x:Name="SubMenuPopup" AllowsTransparency="true" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                        Placement="Bottom"  Focusable="false" VerticalOffset="0"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                        <Border Background="{TemplateBinding Background}"  CornerRadius="0" Margin="5" 
                                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                            <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                                <StackPanel Margin="0" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                            </Grid>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--基于FIconMenuItem的默认样式，提供Header模板-->
            <Style x:Key="DefaultMenuItem" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource FIconMenuItem}">
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock x:Name="txtHeader" FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}"
                               HorizontalAlignment="Stretch" Margin="3,1,5,1"
                               Text="{Binding Header,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}" VerticalAlignment="Center"
                               Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--默认Menu样式-->
            <Style x:Key="MenuControlInMenu" TargetType="{x:Type Menu}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Background" Value="{StaticResource ControlBackGroundColor}" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultMenuItem}"/>
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Menu}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ItemsPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>     
    </Window.Resources>
    <Grid>
        <StackPanel Orientation="Vertical">
            <!--下拉框-->
            <ComboBox Height="25" Width="200" IsReadOnly="True" Style="{StaticResource ResourceKey=ComboBoxStyle}">
                <ComboBoxItem>男</ComboBoxItem>
                <ComboBoxItem>女</ComboBoxItem>
                <ComboBoxItem>未知</ComboBoxItem>
            </ComboBox>
            <!--wrappanel-->
            <WrapPanel>
                <Button Content="1" Width="500"></Button>
                <Button Content="1"></Button>
                <Button Content="1"></Button>
                <Button Content="1"></Button>
                <Button Content="1"></Button>
                <Button Click="Button_Click" Content="点击我" Margin="5,5,5,5" Style="{StaticResource ControlInMenuStyle}" ></Button>
                <Menu Margin="5,0,0,0"  Grid.Column="1" Height="22" Style="{StaticResource MenuControlInMenu}">
                    <MenuItem Header="打印" Width="20">
                        <MenuItem Header="打印所选" />
                        <MenuItem Header="打印所有" />
                    </MenuItem>
                </Menu>
            </WrapPanel>
        </StackPanel>
    </Grid>
</Window>
